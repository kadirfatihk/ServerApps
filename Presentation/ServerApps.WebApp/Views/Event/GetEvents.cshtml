@model List<ServerApps.Business.Dtos.ConfigurationDtos.GetConfigurationDto>

@{
    ViewData["Title"] = "Event Viewer Logs";
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    var ip = ViewBag.IpAddress ?? "";
    var start = ViewBag.StartDateTime ?? "";
    var end = ViewBag.EndDateTime ?? "";
}

<div id="fullPageSpinner" class="spinner-overlay">
    <div class="spinner-border text-primary" role="status" style="width: 3rem; height: 3rem;">
        <span class="sr-only loading-text">Loading...</span>
    </div>
</div>

<!--Sağ üst butonlar-->
<div class="top-action-buttons">
    <a asp-controller="Home" asp-action="Index" class="btn btn-outline-success btn-custom-action">HomePage</a>
    <a asp-controller="WebSite" asp-action="GetWebSites" class="btn btn-outline-info btn-custom-action">IIS</a>
    <a asp-controller="Task" asp-action="GetTasks" class="btn btn-outline-info btn-custom-action">Task</a>
</div>


<h2>Event Viewer</h2>

<!--Tablo-->
<table class="table table-striped table-bordered">
    <thead class="table-light">
        <tr>
            <th>IP</th>
            <th style="width: 200px;">Operation</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var server in Model)
        {
            <tr>
                <td>@server.Ip</td>
                <td>
                    <form asp-controller="Event" asp-action="GetListEvent" method="get" class="mb-0 d-inline">
                        <input type="hidden" name="ip" value="@server.Ip" />
                        <button type="submit" class="btn btn-primary" style="width:250px">List</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<!--Sayfalama-->
<nav aria-label="Sayfalama" class="fixed-pagination">
    <ul class="pagination justify-content-center mb-0">
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("GetEvents", new { ip = ip, startDateTime = start, endDateTime = end, page = currentPage - 1 })">«</a>
            </li>
        }

        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("GetEvents", new { ip = ip, startDateTime = start, endDateTime = end, page = i })">@i</a>
            </li>
        }

        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("GetEvents", new { ip = ip, startDateTime = start, endDateTime = end, page = currentPage + 1 })">»</a>
            </li>
        }
    </ul>
</nav>

<!--CSS-->
<style>
    .top-action-buttons {
        position: absolute;
        top: 10px;
        right: 50px;
        display: flex;
        gap: 10px;
        z-index: 1050;
    }

    .btn-custom-action {
        width: 150px;
    }

    .fixed-pagination {
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 999;
        background-color: #fff;
        padding: 10px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }

    table {
        margin-top: 60px; /* Butonların altına itmek için */
        border-radius: 6px;
        overflow: hidden;
    }

    /* Spinner overlay */
    .spinner-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(255, 255, 255, 0.7);
        z-index: 9999;
        display: none;
        align-items: center;
        justify-content: center;
    }

        .spinner-overlay .text-center {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

    .loading-text {
        font-weight: 600;
        font-size: 1.25rem;
        color: #0d6efd; /* Bootstrap primary */
        letter-spacing: normal; /* Harf aralığını düzeltir */
        font-family: Arial, sans-serif; /* Daha sade ve okunabilir font */
    }

</style>

@section Scripts {
    <script>
        function showSpinner() {
            document.getElementById('fullPageSpinner').style.display = 'flex';
        }

        function hideSpinner() {
            document.getElementById('fullPageSpinner').style.display = 'none';
        }

        window.addEventListener('load', () => {
            hideSpinner();
        });

        document.addEventListener('DOMContentLoaded', () => {
            // Form submit olduğunda spinner aç
            document.querySelectorAll("form").forEach(form => {
                form.addEventListener("submit", () => {
                    showSpinner();
                });
            });

            // Navbar ve sayfalama linklerinde spinner aç
            document.querySelectorAll("a.page-link, .top-action-buttons a").forEach(el => {
                el.addEventListener("click", () => {
                    showSpinner();
                });
            });
        });
    </script>
}
