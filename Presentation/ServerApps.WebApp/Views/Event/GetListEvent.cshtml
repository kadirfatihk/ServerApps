@model List<ServerApps.Business.Dtos.EventDtos.EventLogEntryDto>

@{
    ViewData["Title"] = "Event Viewer Kayıtları";
    var ip = ViewBag.IpAddress ?? "";
    var start = ViewBag.StartDateTime ?? "";
    var end = ViewBag.EndDateTime ?? "";
    var selectedLevels = ViewBag.SelectedLevels as string[] ?? new string[0];
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
}

<!-- Tam ekran spinner -->
<div id="fullPageSpinner" class="spinner-overlay">
    <div class="spinner-border text-primary" role="status">
        <span class="sr-only loading-text">Loading...</span>
    </div>
</div>

<!-- Sağ üst köşe butonlar -->
<div class="top-action-buttons">
    <a asp-controller="Home" asp-action="Index" class="btn btn-outline-success btn-custom-action">HomePage</a>
    <a asp-controller="WebSite" asp-action="GetWebSites" class="btn btn-outline-info btn-custom-action">IIS</a>
    <a asp-controller="Task" asp-action="GetTasks" class="btn btn-outline-info btn-custom-action">Task</a>
</div>

<h2>@ip Logs</h2>

<div class="card mb-4">
    <div class="card-body">
        <form method="get" asp-action="GetListEvent" asp-controller="Event">
            <input type="hidden" name="ip" value="@ip" />
            <div class="row g-3 align-items-end">
                <div class="col-md-3">
                    <label class="form-label" for="startDateTime">Start Date</label>
                    <input type="datetime-local" id="startDateTime" name="startDateTime" value="@start" class="form-control" />
                </div>

                <div class="col-md-3">
                    <label class="form-label" for="endDateTime">End Date</label>
                    <input type="datetime-local" id="endDateTime" name="endDateTime" value="@end" class="form-control" />
                </div>
                <!-- level filter -->
                <div class="col-md-2 d-flex flex-column">
                    <label class="form-label mb-2">Level Filter</label>
                    <div class="dropdown w-100">
                        <button class="btn btn-light dropdown-toggle w-100 text-truncate btn-square" type="button" id="levelFilterBtn" data-bs-toggle="dropdown" aria-expanded="false">
                            Select
                        </button>
                        <ul class="dropdown-menu p-3" aria-labelledby="levelFilterBtn" style="min-width: 180px;">
                            <li class="form-check">
                                <input class="form-check-input" type="checkbox" value="Error" id="levelError" name="levels" @(selectedLevels.Any(l => l.Equals("Error", StringComparison.OrdinalIgnoreCase)) ? "checked" : "") />
                                <label class="form-check-label" for="levelError">Error</label>
                            </li>
                            <li class="form-check">
                                <input class="form-check-input" type="checkbox" value="Warning" id="levelWarning" name="levels" @(selectedLevels.Any(l => l.Equals("Warning", StringComparison.OrdinalIgnoreCase)) ? "checked" : "") />
                                <label class="form-check-label" for="levelWarning">Warning</label>
                            </li>
                            <li class="form-check">
                                <input class="form-check-input" type="checkbox" value="Information" id="levelInformation" name="levels" @(selectedLevels.Any(l => l.Equals("Information", StringComparison.OrdinalIgnoreCase)) ? "checked" : "") />
                                <label class="form-check-label" for="levelInformation">Information</label>
                            </li>
                        </ul>
                    </div>
                </div>
                <!-- arama temizleme-->
                <div class="col-md-4 d-flex gap-2">
                    <button type="submit" id="searchForm" class="btn btn-success btn-square" title="Ara">
                        <i class="bi bi-search"></i>
                    </button>
                    <button type="button" id="clearSearch" class="btn btn-danger btn-square" title="Temizle">
                        <i class="bi bi-arrow-clockwise"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
}
else if (Model.Count == 0)
{
    <div class="alert alert-warning">Kayıt bulunamadı.</div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>Level</th>
                    <th>Source</th>
                    <th>EventId</th>
                    <th>Message</th>
                    <th>TaskCategory</th>
                    <th>TimeCreated</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var log in Model)
                {
                    <tr>
                        <td class="event-level @log.Level.ToLowerInvariant()">@log.Level</td>
                        <td>@log.Source</td>
                        <td>@log.Id</td>
                        <td>@log.Message</td>
                        <td>@log.TaskCategory</td>
                        <td>@log.TimeCreated</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <nav aria-label="Sayfalama" class="fixed-pagination">
        <ul class="pagination justify-content-center mb-0">
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link pagination-link" href="@Url.Action("GetListEvent", new { ip = ip, startDateTime = start, endDateTime = end, levels = selectedLevels, page = currentPage - 1 })">«</a>
                </li>
            }

            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link pagination-link" href="@Url.Action("GetListEvent", new { ip = ip, startDateTime = start, endDateTime = end, levels = selectedLevels, page = i })">@i</a>
                </li>
            }

            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link pagination-link" href="@Url.Action("GetListEvent", new { ip = ip, startDateTime = start, endDateTime = end, levels = selectedLevels, page = currentPage + 1 })">»</a>
                </li>
            }
        </ul>
    </nav>
}


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            // Sayfa yüklendiğinde spinner'ı gizle
            setTimeout(hideSpinner, 500);

            // Spinner gösterme fonksiyonu
            function showSpinner() {
                document.getElementById('fullPageSpinner').style.display = 'flex';
            }

            // Spinner gizleme fonksiyonu
            function hideSpinner() {
                document.getElementById('fullPageSpinner').style.display = 'none';
            }

            // Üst menü butonlarına spinner ekle
            $(".top-action-buttons a").on("click", function () {
                showSpinner();
            });

            // Arama formuna spinner ekle
            $("form[method='get']").on("submit", function () {
                showSpinner();
            });

            // Temizle butonuna spinner ekle
            $("#clearSearch").on("click", function () {
                showSpinner();
                // Form değerlerini temizle
                $('input[name="startDateTime"]').val('');
                $('input[name="endDateTime"]').val('');
                $('input[name="levels"]').prop('checked', false);

                // Sayfa 1'e dön ve formu submit et
                window.location.href = '@Url.Action("GetListEvent", "Event", new { ip = ip })';
            });

            // Sayfalama linklerine spinner ekle
            $(".pagination-link").on("click", function () {
                showSpinner();
            });
        });
    </script>
}

<style>
    .loading-text {
        font-weight: 600;
        font-size: 1.25rem;
        color: #0d6efd; /* Bootstrap primary */
        letter-spacing: normal; /* Harf aralığını düzeltir */
        font-family: Arial, sans-serif; /* Daha sade ve okunabilir font */
    }

    .spinner-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(255, 255, 255, 0.7);
        z-index: 9999;
        display: none;
        align-items: center;
        justify-content: center;
    }

    body {
        padding-top: 0;
    }

    .top-action-buttons {
        position: absolute;
        top: 10px;
        right: 50px;
        z-index: 1000;
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

        .top-action-buttons .btn-custom-action {
            width: 150px;
            text-align: center;
        }

    .table-responsive {
        overflow-x: auto;
        padding-bottom: 60px;
    }

    .pagination {
        justify-content: center;
    }

    .fixed-pagination {
        position: fixed;
        bottom: 10px;
        width: 100%;
        left: 0;
        background-color: #fff;
        padding: 0 20px;
        box-shadow: 0 -2px 5px rgb(0 0 0 / 0.1);
        z-index: 1000;
    }

    .btn-square {
        width: 42px;
        height: 42px;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;
        border-radius: 6px !important;
    }

    .event-level.error {
        color: #dc3545;
        font-weight: 700;
    }

    .event-level.warning {
        color: #ffc107;
        font-weight: 700;
    }

    .event-level.information {
        color: #0d6efd;
        font-weight: 700;
    }

    tbody td {
        text-align: center;
        vertical-align: middle;
    }

        tbody td:nth-child(4) {
            text-align: left;
        }
</style>